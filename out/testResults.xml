<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="139" errors="0" failures="12" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-05-18" time="23:40:55">
  <environment nunit-version="2.5.8.0" machine-name="JLA-LOFTHTPC" user="Owner" user-domain="JLA-LoftHTPC" os-version="10.0.19044" clr-version="9.0.1" cwd="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="2.0548" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="1.4222" asserts="0" description="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'ConvertFrom-AppCapabilitySID.ps1'" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="function 'ConvertFrom-AppCapabilitySID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-AppCapabilitySID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-AppCapabilitySID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertFrom-AppCapabilitySID.ps1&quot;)" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-AppCapabilitySID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-AppCapabilitySID.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertFrom-AppCapabilitySID.ps1&quot;)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-ScShowSidResult.ps1'" executed="True" result="Success" success="True" time="0.047" asserts="0" description="function 'ConvertFrom-ScShowSidResult.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ScShowSidResult.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-ScShowSidResult.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertFrom-ScShowSidResult.ps1&quot;)" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ScShowSidResult.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.006" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-ScShowSidResult.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertFrom-ScShowSidResult.ps1&quot;)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-AccountCache.ps1'" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="function 'ConvertTo-AccountCache.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-AccountCache.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-AccountCache.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-AccountCache.ps1&quot;)" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-AccountCache.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-AccountCache.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-AccountCache.ps1&quot;)" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.0832" asserts="0" description="function 'ConvertTo-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-DirectoryEntry.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DirectoryEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-DirectoryEntry.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-PermissionPrincipal.ps1'" executed="True" result="Success" success="True" time="0.1009" asserts="0" description="function 'ConvertTo-PermissionPrincipal.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-PermissionPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-PermissionPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-PermissionPrincipal.ps1&quot;)" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-PermissionPrincipal.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-PermissionPrincipal.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-PermissionPrincipal.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-ServiceSID.ps1'" executed="True" result="Success" success="True" time="0.1229" asserts="0" description="function 'ConvertTo-ServiceSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-ServiceSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-ServiceSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-ServiceSID.ps1&quot;)" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-ServiceSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0091" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-ServiceSID.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-ServiceSID.ps1&quot;)" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SidString.ps1'" executed="True" result="Success" success="True" time="0.1488" asserts="0" description="function 'ConvertTo-SidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-SidString.ps1&quot;)" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0089" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SidString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\ConvertTo-SidString.ps1&quot;)" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-AdsiProvider.ps1'" executed="True" result="Success" success="True" time="0.1661" asserts="0" description="function 'Find-AdsiProvider.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-AdsiProvider.ps1&quot;)" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-AdsiProvider.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-AdsiProvider.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-AdsiProvider.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-CachedWellKnownSid.ps1'" executed="True" result="Success" success="True" time="0.19" asserts="0" description="function 'Find-CachedWellKnownSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-CachedWellKnownSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.003" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-CachedWellKnownSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-CachedWellKnownSid.ps1&quot;)" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-CachedWellKnownSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-CachedWellKnownSid.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-CachedWellKnownSid.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="0.2116" asserts="0" description="function 'Find-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-WinNTGroupMember.ps1&quot;)" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0082" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-WinNTGroupMember.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Find-WinNTGroupMember.ps1&quot;)" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-CachedDirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.2366" asserts="0" description="function 'Get-CachedDirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-CachedDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0082" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-CachedDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-CachedDirectoryEntry.ps1&quot;)" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-CachedDirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-CachedDirectoryEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-CachedDirectoryEntry.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-DirectoryEntryParentName.ps1'" executed="True" result="Success" success="True" time="0.2542" asserts="0" description="function 'Get-DirectoryEntryParentName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntryParentName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0041" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DirectoryEntryParentName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-DirectoryEntryParentName.ps1&quot;)" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntryParentName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DirectoryEntryParentName.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-DirectoryEntryParentName.ps1&quot;)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-SidTypeMap.ps1'" executed="True" result="Success" success="True" time="0.2725" asserts="0" description="function 'Get-SidTypeMap.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-SidTypeMap.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-SidTypeMap.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-SidTypeMap.ps1&quot;)" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-SidTypeMap.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.006" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-SidTypeMap.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Get-SidTypeMap.ps1&quot;)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-IADsGroupMembersMethod.ps1'" executed="True" result="Success" success="True" time="0.2875" asserts="0" description="function 'Invoke-IADsGroupMembersMethod.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-IADsGroupMembersMethod.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-IADsGroupMembersMethod.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Invoke-IADsGroupMembersMethod.ps1&quot;)" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-IADsGroupMembersMethod.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-IADsGroupMembersMethod.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Invoke-IADsGroupMembersMethod.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-ScShowSid.ps1'" executed="True" result="Success" success="True" time="0.3072" asserts="0" description="function 'Invoke-ScShowSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ScShowSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-ScShowSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Invoke-ScShowSid.ps1&quot;)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ScShowSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-ScShowSid.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Invoke-ScShowSid.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefAppPkgAuth.ps1'" executed="True" result="Success" success="True" time="0.3232" asserts="0" description="function 'Resolve-IdRefAppPkgAuth.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefAppPkgAuth.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefAppPkgAuth.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefAppPkgAuth.ps1&quot;)" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefAppPkgAuth.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.006" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefAppPkgAuth.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefAppPkgAuth.ps1&quot;)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefBuiltIn.ps1'" executed="True" result="Success" success="True" time="0.3444" asserts="0" description="function 'Resolve-IdRefBuiltIn.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefBuiltIn.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0086" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefBuiltIn.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefBuiltIn.ps1&quot;)" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefBuiltIn.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefBuiltIn.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefBuiltIn.ps1&quot;)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefCached.ps1'" executed="True" result="Success" success="True" time="0.3611" asserts="0" description="function 'Resolve-IdRefCached.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefCached.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefCached.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefCached.ps1&quot;)" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefCached.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefCached.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefCached.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefGetDirEntry.ps1'" executed="True" result="Success" success="True" time="0.383" asserts="0" description="function 'Resolve-IdRefGetDirEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefGetDirEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefGetDirEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefGetDirEntry.ps1&quot;)" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefGetDirEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0123" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefGetDirEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefGetDirEntry.ps1&quot;)" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSearchDir.ps1'" executed="True" result="Success" success="True" time="0.4001" asserts="0" description="function 'Resolve-IdRefSearchDir.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSearchDir.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSearchDir.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSearchDir.ps1&quot;)" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSearchDir.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSearchDir.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSearchDir.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSID.ps1'" executed="True" result="Success" success="True" time="0.425" asserts="0" description="function 'Resolve-IdRefSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0115" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSID.ps1&quot;)" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSID.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSID.ps1&quot;)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSvc.ps1'" executed="True" result="Success" success="True" time="0.4418" asserts="0" description="function 'Resolve-IdRefSvc.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSvc.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSvc.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSvc.ps1&quot;)" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSvc.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSvc.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-IdRefSvc.ps1&quot;)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-SidAuthority.ps1'" executed="True" result="Success" success="True" time="0.4572" asserts="0" description="function 'Resolve-SidAuthority.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-SidAuthority.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.003" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-SidAuthority.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-SidAuthority.ps1&quot;)" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-SidAuthority.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0054" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-SidAuthority.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Resolve-SidAuthority.ps1&quot;)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Split-DirectoryPath.ps1'" executed="True" result="Success" success="True" time="0.478" asserts="0" description="function 'Split-DirectoryPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Split-DirectoryPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Split-DirectoryPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Split-DirectoryPath.ps1&quot;)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Split-DirectoryPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Split-DirectoryPath.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Split-DirectoryPath.ps1&quot;)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Test-AdsiProvider.ps1'" executed="True" result="Success" success="True" time="0.4933" asserts="0" description="function 'Test-AdsiProvider.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Test-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Test-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Test-AdsiProvider.ps1&quot;)" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Test-AdsiProvider.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0052" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Test-AdsiProvider.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\private\Test-AdsiProvider.ps1&quot;)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Add-DomainFqdnToLdapPath.ps1'" executed="True" result="Success" success="True" time="0.5147" asserts="0" description="function 'Add-DomainFqdnToLdapPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Add-DomainFqdnToLdapPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Add-DomainFqdnToLdapPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1&quot;)" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Add-DomainFqdnToLdapPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Add-DomainFqdnToLdapPath.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Add-SidInfo.ps1'" executed="True" result="Success" success="True" time="0.5369" asserts="0" description="function 'Add-SidInfo.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Add-SidInfo.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Add-SidInfo.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Add-SidInfo.ps1&quot;)" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Add-SidInfo.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0114" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Add-SidInfo.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Add-SidInfo.ps1&quot;)" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.5544" asserts="0" description="function 'ConvertFrom-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-DirectoryEntry.ps1&quot;)" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-DirectoryEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-DirectoryEntry.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'" executed="True" result="Success" success="True" time="0.5756" asserts="0" description="function 'ConvertFrom-PropertyValueCollectionToString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0029" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-PropertyValueCollectionToString.ps1&quot;)" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-PropertyValueCollectionToString.ps1&quot;)" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-ResolvedID.ps1'" executed="True" result="Success" success="True" time="0.5952" asserts="0" description="function 'ConvertFrom-ResolvedID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResolvedID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-ResolvedID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-ResolvedID.ps1&quot;)" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResolvedID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-ResolvedID.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-ResolvedID.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'" executed="True" result="Success" success="True" time="0.6173" asserts="0" description="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-ResultPropertyValueCollectionToString.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-ResultPropertyValueCollectionToString.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-SearchResult.ps1'" executed="True" result="Success" success="True" time="0.6346" asserts="0" description="function 'ConvertFrom-SearchResult.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SearchResult.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-SearchResult.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-SearchResult.ps1&quot;)" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SearchResult.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-SearchResult.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-SearchResult.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-SidString.ps1'" executed="True" result="Success" success="True" time="0.6559" asserts="0" description="function 'ConvertFrom-SidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0076" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-SidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-SidString.ps1&quot;)" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-SidString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertFrom-SidString.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DecStringRepresentation.ps1'" executed="True" result="Success" success="True" time="0.6724" asserts="0" description="function 'ConvertTo-DecStringRepresentation.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DecStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DecStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DecStringRepresentation.ps1&quot;)" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DecStringRepresentation.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DecStringRepresentation.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DecStringRepresentation.ps1&quot;)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DistinguishedName.ps1'" executed="True" result="Success" success="True" time="0.6969" asserts="0" description="function 'ConvertTo-DistinguishedName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DistinguishedName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0041" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DistinguishedName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DistinguishedName.ps1&quot;)" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DistinguishedName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DistinguishedName.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DistinguishedName.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DomainNetBIOS.ps1'" executed="True" result="Success" success="True" time="0.7148" asserts="0" description="function 'ConvertTo-DomainNetBIOS.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainNetBIOS.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DomainNetBIOS.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DomainNetBIOS.ps1&quot;)" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainNetBIOS.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DomainNetBIOS.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DomainNetBIOS.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DomainSidString.ps1'" executed="True" result="Success" success="True" time="0.7382" asserts="0" description="function 'ConvertTo-DomainSidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainSidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DomainSidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DomainSidString.ps1&quot;)" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainSidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0119" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DomainSidString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-DomainSidString.ps1&quot;)" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-Fqdn.ps1'" executed="True" result="Success" success="True" time="0.7548" asserts="0" description="function 'ConvertTo-Fqdn.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-Fqdn.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-Fqdn.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-Fqdn.ps1&quot;)" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-Fqdn.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-Fqdn.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-Fqdn.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-HexStringRepresentation.ps1'" executed="True" result="Success" success="True" time="0.78" asserts="0" description="function 'ConvertTo-HexStringRepresentation.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0029" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-HexStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1&quot;)" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentation.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-HexStringRepresentation.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1&quot;)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'" executed="True" result="Success" success="True" time="0.804" asserts="0" description="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0088" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1&quot;)" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SidByteArray.ps1'" executed="True" result="Success" success="True" time="0.8294" asserts="0" description="function 'ConvertTo-SidByteArray.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidByteArray.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0086" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SidByteArray.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-SidByteArray.ps1&quot;)" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidByteArray.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0083" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SidByteArray.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\ConvertTo-SidByteArray.ps1&quot;)" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-AdsiGroupMember.ps1'" executed="True" result="Success" success="True" time="0.8462" asserts="0" description="function 'Expand-AdsiGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Expand-AdsiGroupMember.ps1&quot;)" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-AdsiGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-AdsiGroupMember.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Expand-AdsiGroupMember.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="0.871" asserts="0" description="function 'Expand-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0093" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Expand-WinNTGroupMember.ps1&quot;)" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0074" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-WinNTGroupMember.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Expand-WinNTGroupMember.ps1&quot;)" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-LocalAdsiServerSid.ps1'" executed="True" result="Success" success="True" time="0.891" asserts="0" description="function 'Find-LocalAdsiServerSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-LocalAdsiServerSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-LocalAdsiServerSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Find-LocalAdsiServerSid.ps1&quot;)" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-LocalAdsiServerSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0084" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-LocalAdsiServerSid.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Find-LocalAdsiServerSid.ps1&quot;)" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiGroup.ps1'" executed="True" result="Success" success="True" time="0.923" asserts="0" description="function 'Get-AdsiGroup.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroup.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiGroup.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiGroup.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroup.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiGroup.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiGroup.ps1&quot;)" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiGroupMember.ps1'" executed="True" result="Success" success="True" time="0.9559" asserts="0" description="function 'Get-AdsiGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiGroupMember.ps1&quot;)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiGroupMember.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiGroupMember.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiServer.ps1'" executed="True" result="Success" success="True" time="0.9843" asserts="0" description="function 'Get-AdsiServer.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiServer.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiServer.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiServer.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiServer.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0091" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiServer.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-AdsiServer.ps1&quot;)" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-CurrentDomain.ps1'" executed="True" result="Success" success="True" time="1.0135" asserts="0" description="function 'Get-CurrentDomain.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-CurrentDomain.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0047" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-CurrentDomain.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-CurrentDomain.ps1&quot;)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-CurrentDomain.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0078" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-CurrentDomain.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-CurrentDomain.ps1&quot;)" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="1.0419" asserts="0" description="function 'Get-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-DirectoryEntry.ps1&quot;)" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DirectoryEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-DirectoryEntry.ps1&quot;)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownCaptionHashTable.ps1'" executed="True" result="Success" success="True" time="1.062" asserts="0" description="function 'Get-KnownCaptionHashTable.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownCaptionHashTable.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownCaptionHashTable.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownCaptionHashTable.ps1&quot;)" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownCaptionHashTable.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownCaptionHashTable.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownCaptionHashTable.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSid.ps1'" executed="True" result="Success" success="True" time="1.0884" asserts="0" description="function 'Get-KnownSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0113" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSid.ps1&quot;)" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSid.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSid.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSidByName.ps1'" executed="True" result="Success" success="True" time="1.1039" asserts="0" description="function 'Get-KnownSidByName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidByName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSidByName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSidByName.ps1&quot;)" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidByName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSidByName.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSidByName.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSidHashtable.ps1'" executed="True" result="Success" success="True" time="1.1307" asserts="0" description="function 'Get-KnownSidHashtable.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidHashtable.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0138" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSidHashtable.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSidHashtable.ps1&quot;)" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidHashtable.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSidHashtable.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-KnownSidHashtable.ps1&quot;)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-ParentDomainDnsName.ps1'" executed="True" result="Success" success="True" time="1.1515" asserts="0" description="function 'Get-ParentDomainDnsName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-ParentDomainDnsName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-ParentDomainDnsName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-ParentDomainDnsName.ps1&quot;)" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-ParentDomainDnsName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0121" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-ParentDomainDnsName.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-ParentDomainDnsName.ps1&quot;)" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-TrustedDomain.ps1'" executed="True" result="Success" success="True" time="1.1679" asserts="0" description="function 'Get-TrustedDomain.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-TrustedDomain.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-TrustedDomain.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-TrustedDomain.ps1&quot;)" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-TrustedDomain.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-TrustedDomain.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-TrustedDomain.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="1.1854" asserts="0" description="function 'Get-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-WinNTGroupMember.ps1&quot;)" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.006" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-WinNTGroupMember.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Get-WinNTGroupMember.ps1&quot;)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-ComObject.ps1'" executed="True" result="Success" success="True" time="1.2072" asserts="0" description="function 'Invoke-ComObject.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ComObject.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.008" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-ComObject.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Invoke-ComObject.ps1&quot;)" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ComObject.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-ComObject.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Invoke-ComObject.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'New-FakeDirectoryEntry.ps1'" executed="True" result="Success" success="True" time="1.2251" asserts="0" description="function 'New-FakeDirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'New-FakeDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0036" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'New-FakeDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\New-FakeDirectoryEntry.ps1&quot;)" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'New-FakeDirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'New-FakeDirectoryEntry.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\New-FakeDirectoryEntry.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdentityReference.ps1'" executed="True" result="Success" success="True" time="1.2462" asserts="0" description="function 'Resolve-IdentityReference.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdentityReference.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.004" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdentityReference.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Resolve-IdentityReference.ps1&quot;)" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdentityReference.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0054" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdentityReference.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Resolve-IdentityReference.ps1&quot;)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-ServiceNameToSID.ps1'" executed="True" result="Success" success="True" time="1.2675" asserts="0" description="function 'Resolve-ServiceNameToSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-ServiceNameToSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-ServiceNameToSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Resolve-ServiceNameToSID.ps1&quot;)" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-ServiceNameToSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.011" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-ServiceNameToSID.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Resolve-ServiceNameToSID.ps1&quot;)" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Search-Directory.ps1'" executed="True" result="Success" success="True" time="1.2845" asserts="0" description="function 'Search-Directory.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Search-Directory.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Search-Directory.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Search-Directory.ps1&quot;)" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Search-Directory.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Search-Directory.ps1'.runs without throwing errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\src\functions\public\Search-Directory.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Manifest.tests.ps1" executed="True" result="Failure" success="False" time="0.0717" asserts="0" description="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest '.psd1'" executed="True" result="Failure" success="False" time="0" asserts="0" description="module manifest '.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest '.psd1'.- Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="module manifest '.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest '.psd1'.- Validation.is a valid manifest" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid name in the manifest" name="module manifest '.psd1'.- Validation.has a valid name in the manifest" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid root module" name="module manifest '.psd1'.- Validation.has a valid root module" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid version" name="module manifest '.psd1'.- Validation.has a valid version" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid description" name="module manifest '.psd1'.- Validation.has a valid description" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid author" name="module manifest '.psd1'.- Validation.has a valid author" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid guid" name="module manifest '.psd1'.- Validation.has a valid guid" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has a valid copyright" name="module manifest '.psd1'.- Validation.has a valid copyright" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Failure" success="False" time="0" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Failure" success="False" time="0" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Metadata.tests.ps1" executed="True" result="Success" success="True" time="0.1271" asserts="0" description="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0128" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.3614" asserts="0" description="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'Adsi'" executed="True" result="Success" success="True" time="0.1381" asserts="0" description="PowerShell files in module 'Adsi'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'Adsi'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.1309" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\dist\5.0.35\Adsi\Adsi.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'Adsi'.'F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\dist\5.0.35\Adsi\Adsi.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\dist\5.0.35\Adsi\Adsi.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'Adsi'.'F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\dist\5.0.35\Adsi\Adsi.psm1' can be tokenized by the PowerShell parser without any errors" time="0.1267" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'Adsi'" executed="True" result="Success" success="True" time="0.2919" asserts="0" description="module 'Adsi'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'Adsi'.can be imported without any errors" executed="True" result="Success" success="True" time="0.1475" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'Adsi'.can be imported without any errors(&quot;F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\dist\5.0.35\Adsi\Adsi.psm1&quot;)" time="0.1475" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Project.tests.ps1" executed="True" result="Failure" success="False" time="0.0531" asserts="0" description="F:\Owner\OneDrive\Data\Programs\Scripts\PowerShell\Export-Permission\Entire Project\Adsi\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Failure" success="False" time="0" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Failure" success="False" time="0" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>