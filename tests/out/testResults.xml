<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="54" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2022-01-22" time="08:44:47">
  <environment machine-name="JLA-LOFTHTPC" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests" clr-version="Unknown" nunit-version="2.5.8.0" user-domain="JLA-LoftHTPC" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" os-version="10.0.19042" user="Owner" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Ignored" success="True" time="2.7423" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Manifest.tests.ps1" executed="True" result="Ignored" success="True" time="1.3156" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module manifest" executed="True" result="Success" success="True" time="0.5735" asserts="0" description="Module manifest">
            <results>
              <test-suite type="TestFixture" name="Module manifest.Validation" executed="True" result="Success" success="True" time="0.552" asserts="0" description="Module manifest.Validation">
                <results>
                  <test-case description="Has a valid manifest" name="Module manifest.Validation.Has a valid manifest" time="0.2378" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid name in the manifest" name="Module manifest.Validation.Has a valid name in the manifest" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid root module" name="Module manifest.Validation.Has a valid root module" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid version in the manifest" name="Module manifest.Validation.Has a valid version in the manifest" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid description" name="Module manifest.Validation.Has a valid description" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid author" name="Module manifest.Validation.Has a valid author" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid guid" name="Module manifest.Validation.Has a valid guid" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid copyright" name="Module manifest.Validation.Has a valid copyright" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Has a valid version in the changelog" name="Module manifest.Validation.Has a valid version in the changelog" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Changelog and manifest versions are the same" name="Module manifest.Validation.Changelog and manifest versions are the same" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.5966" asserts="0" description="Git tagging">
            <results>
              <test-case description="Is tagged with a valid version" name="Git tagging.Is tagged with a valid version" time="0.0151" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="Matches manifest version" name="Git tagging.Matches manifest version" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Meta.tests.ps1" executed="True" result="Success" success="True" time="0.2945" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Meta.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Text files formatting" executed="True" result="Success" success="True" time="0.0469" asserts="0" description="Text files formatting">
            <results>
              <test-suite type="TestFixture" name="Text files formatting.File encoding" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Text files formatting.File encoding">
                <results>
                  <test-case description="No text file uses Unicode/UTF-16 encoding" name="Text files formatting.File encoding.No text file uses Unicode/UTF-16 encoding" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Text files formatting.Indentations" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Text files formatting.Indentations">
                <results>
                  <test-case description="No text file use tabs for indentations" name="Text files formatting.Indentations.No text file use tabs for indentations" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\PsAdsi.tests.ps1" executed="True" result="Success" success="True" time="0.8141" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\PsAdsi.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="'PsAdsi.psd1' Module Manifest Tests" executed="True" result="Success" success="True" time="0.1438" asserts="0" description="'PsAdsi.psd1' Module Manifest Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsAdsi.psd1' Module Manifest Tests.Module manifest 'PsAdsi.psd1' passes Test-ModuleManifest" executed="True" result="Success" success="True" time="0.1399" asserts="0" description="Module manifest 'PsAdsi.psd1' passes Test-ModuleManifest">
                <results>
                  <test-case description="Module manifest 'PsAdsi.psd1' passes Test-ModuleManifest" name="'PsAdsi.psd1' Module Manifest Tests.Module manifest 'PsAdsi.psd1' passes Test-ModuleManifest(E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psd1)" time="0.1399" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="'PsAdsi' Function Tests" executed="True" result="Success" success="True" time="0.6" asserts="0" description="'PsAdsi' Function Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsAdsi' Function Tests.Script '&lt;Script&gt;' is valid PowerShell" executed="True" result="Success" success="True" time="0.4335" asserts="0" description="Script '&lt;Script&gt;' is valid PowerShell">
                <results>
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psd1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psd1' is valid PowerShell" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psm1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psm1' is valid PowerShell" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1' is valid PowerShell" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Add-SidInfo.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Add-SidInfo.ps1' is valid PowerShell" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-DistinguishedName.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-DistinguishedName.ps1' is valid PowerShell" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-Fqdn.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-Fqdn.ps1' is valid PowerShell" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1' is valid PowerShell" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1' is valid PowerShell" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-SidByteArray.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\ConvertTo-SidByteArray.ps1' is valid PowerShell" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-AdsiGroupMember.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-AdsiGroupMember.ps1' is valid PowerShell" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-IdentityReference.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-IdentityReference.ps1' is valid PowerShell" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-WinNTGroupMember.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Expand-WinNTGroupMember.ps1' is valid PowerShell" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Find-AdsiProvider.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Find-AdsiProvider.ps1' is valid PowerShell" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-ADSIGroup.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-ADSIGroup.ps1' is valid PowerShell" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-ADSIGroupMember.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-ADSIGroupMember.ps1' is valid PowerShell" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-CurrentDomain.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-CurrentDomain.ps1' is valid PowerShell" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-DirectoryEntry.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-DirectoryEntry.ps1' is valid PowerShell" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-TrustedDomainSidNameMap.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-TrustedDomainSidNameMap.ps1' is valid PowerShell" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-WinNTGroupMember.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Get-WinNTGroupMember.ps1' is valid PowerShell" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Invoke-ComObject.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Invoke-ComObject.ps1' is valid PowerShell" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\New-FakeDirectoryEntry.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\New-FakeDirectoryEntry.ps1' is valid PowerShell" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Resolve-IdentityReference.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Resolve-IdentityReference.ps1' is valid PowerShell" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Search-Directory.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Search-Directory.ps1' is valid PowerShell" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' is valid PowerShell" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\PsAdsi.psd1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\PsAdsi.psd1' is valid PowerShell" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\PsAdsi.psm1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\PsAdsi.psm1' is valid PowerShell" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.tests.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.tests.ps1' is valid PowerShell" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Help.tests.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Help.tests.ps1' is valid PowerShell" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Manifest.tests.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Manifest.tests.ps1' is valid PowerShell" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Meta.tests.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\Meta.tests.ps1' is valid PowerShell" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\MetaFixers.psm1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\MetaFixers.psm1' is valid PowerShell" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\PsAdsi.tests.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\PsAdsi.tests.ps1' is valid PowerShell" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\ScriptAnalyzerSettings.psd1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\ScriptAnalyzerSettings.psd1' is valid PowerShell" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\build.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\build.ps1' is valid PowerShell" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\psakeFile.ps1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\psakeFile.ps1' is valid PowerShell" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\psdependRequirements.psd1' is valid PowerShell" name="'PsAdsi' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\psdependRequirements.psd1' is valid PowerShell" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="'PsAdsi.psm1' Module Tests" executed="True" result="Success" success="True" time="0.6483" asserts="0" description="'PsAdsi.psm1' Module Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'PsAdsi.psm1' Module Tests.Module file '&lt;ThisModule&gt;' can be imported without any errors" executed="True" result="Success" success="True" time="0.0442" asserts="0" description="Module file '&lt;ThisModule&gt;' can be imported without any errors">
                <results>
                  <test-case description="Module file 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psm1' can be imported without any errors" name="'PsAdsi.psm1' Module Tests.Module file 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\dist\PsAdsi\1.0.0\PsAdsi.psm1' can be imported without any errors" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.tests.ps1" executed="True" result="Success" success="True" time="0.1583" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\tests\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests" executed="True" result="Success" success="True" time="0.0769" asserts="0" description="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests">
            <results>
              <test-suite type="ParameterizedTest" name="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests.Script file 'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' can be run without any errors" executed="True" result="Success" success="True" time="0.052" asserts="0" description="Script file 'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' can be run without any errors">
                <results>
                  <test-case description="Script file 'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' can be run without any errors" name="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests.Script file 'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' can be run without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1&quot;)" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests.Script '&lt;Script&gt;' is valid PowerShell" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="Script '&lt;Script&gt;' is valid PowerShell">
                <results>
                  <test-case description="Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' is valid PowerShell" name="'Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' Function Tests.Script 'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsAdsi\src\functions\public\Test-PublicFunction_511f9c72-4f82-4b90-be93-ad7576481d5b.ps1' is valid PowerShell" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>