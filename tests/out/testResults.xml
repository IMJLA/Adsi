<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="898" errors="0" failures="122" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2024-11-24" time="10:07:09">
  <environment user="Owner" os-version="10.0.19044" machine-name="JLA-LOFTHTPC" nunit-version="2.5.8.0" clr-version="8.0.4" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests" user-domain="JLA-LoftHTPC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="12.8838" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="1.7256" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'ConvertFrom-AppCapabilitySID.ps1'" executed="True" result="Success" success="True" time="0.027" asserts="0" description="function 'ConvertFrom-AppCapabilitySID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-AppCapabilitySID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-AppCapabilitySID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertFrom-AppCapabilitySID.ps1&quot;)" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-AppCapabilitySID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0127" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-AppCapabilitySID.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertFrom-AppCapabilitySID.ps1&quot;)" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-ScShowSidResult.ps1'" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="function 'ConvertFrom-ScShowSidResult.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ScShowSidResult.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0092" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-ScShowSidResult.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertFrom-ScShowSidResult.ps1&quot;)" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ScShowSidResult.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-ScShowSidResult.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertFrom-ScShowSidResult.ps1&quot;)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-AccountCache.ps1'" executed="True" result="Success" success="True" time="0.0707" asserts="0" description="function 'ConvertTo-AccountCache.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-AccountCache.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0093" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-AccountCache.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-AccountCache.ps1&quot;)" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-AccountCache.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-AccountCache.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-AccountCache.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.0901" asserts="0" description="function 'ConvertTo-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-DirectoryEntry.ps1&quot;)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DirectoryEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-DirectoryEntry.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-PermissionPrincipal.ps1'" executed="True" result="Success" success="True" time="0.1205" asserts="0" description="function 'ConvertTo-PermissionPrincipal.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-PermissionPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-PermissionPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-PermissionPrincipal.ps1&quot;)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-PermissionPrincipal.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-PermissionPrincipal.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-PermissionPrincipal.ps1&quot;)" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-ServiceSID.ps1'" executed="True" result="Success" success="True" time="0.1425" asserts="0" description="function 'ConvertTo-ServiceSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-ServiceSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0083" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-ServiceSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-ServiceSID.ps1&quot;)" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-ServiceSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0083" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-ServiceSID.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-ServiceSID.ps1&quot;)" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SidString.ps1'" executed="True" result="Success" success="True" time="0.1688" asserts="0" description="function 'ConvertTo-SidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0139" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-SidString.ps1&quot;)" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SidString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\ConvertTo-SidString.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-AdsiProvider.ps1'" executed="True" result="Success" success="True" time="0.2023" asserts="0" description="function 'Find-AdsiProvider.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0106" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-AdsiProvider.ps1&quot;)" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-AdsiProvider.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0099" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-AdsiProvider.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-AdsiProvider.ps1&quot;)" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-CachedWellKnownSid.ps1'" executed="True" result="Success" success="True" time="0.2237" asserts="0" description="function 'Find-CachedWellKnownSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-CachedWellKnownSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-CachedWellKnownSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-CachedWellKnownSid.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-CachedWellKnownSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-CachedWellKnownSid.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-CachedWellKnownSid.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="0.2501" asserts="0" description="function 'Find-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0115" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-WinNTGroupMember.ps1&quot;)" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0083" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-WinNTGroupMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Find-WinNTGroupMember.ps1&quot;)" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-CachedDirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.2841" asserts="0" description="function 'Get-CachedDirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-CachedDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.009" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-CachedDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-CachedDirectoryEntry.ps1&quot;)" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-CachedDirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0086" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-CachedDirectoryEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-CachedDirectoryEntry.ps1&quot;)" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-DirectoryEntryParentName.ps1'" executed="True" result="Success" success="True" time="0.3085" asserts="0" description="function 'Get-DirectoryEntryParentName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntryParentName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DirectoryEntryParentName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-DirectoryEntryParentName.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntryParentName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0092" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DirectoryEntryParentName.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-DirectoryEntryParentName.ps1&quot;)" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-SidTypeMap.ps1'" executed="True" result="Success" success="True" time="0.3368" asserts="0" description="function 'Get-SidTypeMap.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-SidTypeMap.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-SidTypeMap.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-SidTypeMap.ps1&quot;)" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-SidTypeMap.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0134" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-SidTypeMap.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Get-SidTypeMap.ps1&quot;)" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-IADsGroupMembersMethod.ps1'" executed="True" result="Success" success="True" time="0.3545" asserts="0" description="function 'Invoke-IADsGroupMembersMethod.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-IADsGroupMembersMethod.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.005" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-IADsGroupMembersMethod.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Invoke-IADsGroupMembersMethod.ps1&quot;)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-IADsGroupMembersMethod.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-IADsGroupMembersMethod.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Invoke-IADsGroupMembersMethod.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-ScShowSid.ps1'" executed="True" result="Success" success="True" time="0.3718" asserts="0" description="function 'Invoke-ScShowSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ScShowSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0047" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-ScShowSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Invoke-ScShowSid.ps1&quot;)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ScShowSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-ScShowSid.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Invoke-ScShowSid.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefAppPkgAuth.ps1'" executed="True" result="Success" success="True" time="0.3934" asserts="0" description="function 'Resolve-IdRefAppPkgAuth.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefAppPkgAuth.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.01" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefAppPkgAuth.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefAppPkgAuth.ps1&quot;)" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefAppPkgAuth.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.006" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefAppPkgAuth.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefAppPkgAuth.ps1&quot;)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefBuiltIn.ps1'" executed="True" result="Success" success="True" time="0.4171" asserts="0" description="function 'Resolve-IdRefBuiltIn.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefBuiltIn.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefBuiltIn.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefBuiltIn.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefBuiltIn.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefBuiltIn.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefBuiltIn.ps1&quot;)" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefCached.ps1'" executed="True" result="Success" success="True" time="0.4412" asserts="0" description="function 'Resolve-IdRefCached.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefCached.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0047" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefCached.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefCached.ps1&quot;)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefCached.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0049" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefCached.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefCached.ps1&quot;)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefGetDirEntry.ps1'" executed="True" result="Success" success="True" time="0.5203" asserts="0" description="function 'Resolve-IdRefGetDirEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefGetDirEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0543" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefGetDirEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefGetDirEntry.ps1&quot;)" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefGetDirEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefGetDirEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefGetDirEntry.ps1&quot;)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSearchDir.ps1'" executed="True" result="Success" success="True" time="0.5383" asserts="0" description="function 'Resolve-IdRefSearchDir.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSearchDir.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0049" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSearchDir.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSearchDir.ps1&quot;)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSearchDir.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSearchDir.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSearchDir.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSID.ps1'" executed="True" result="Success" success="True" time="0.5603" asserts="0" description="function 'Resolve-IdRefSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0111" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSID.ps1&quot;)" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSID.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSID.ps1&quot;)" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdRefSvc.ps1'" executed="True" result="Success" success="True" time="0.5821" asserts="0" description="function 'Resolve-IdRefSvc.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSvc.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdRefSvc.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSvc.ps1&quot;)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdRefSvc.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0086" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdRefSvc.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-IdRefSvc.ps1&quot;)" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-SidAuthority.ps1'" executed="True" result="Success" success="True" time="0.5985" asserts="0" description="function 'Resolve-SidAuthority.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-SidAuthority.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0051" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-SidAuthority.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-SidAuthority.ps1&quot;)" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-SidAuthority.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0047" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-SidAuthority.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Resolve-SidAuthority.ps1&quot;)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Split-DirectoryPath.ps1'" executed="True" result="Success" success="True" time="0.6209" asserts="0" description="function 'Split-DirectoryPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Split-DirectoryPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Split-DirectoryPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Split-DirectoryPath.ps1&quot;)" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Split-DirectoryPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Split-DirectoryPath.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Split-DirectoryPath.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Test-AdsiProvider.ps1'" executed="True" result="Success" success="True" time="0.6393" asserts="0" description="function 'Test-AdsiProvider.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Test-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0057" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Test-AdsiProvider.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Test-AdsiProvider.ps1&quot;)" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Test-AdsiProvider.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Test-AdsiProvider.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\private\Test-AdsiProvider.ps1&quot;)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Add-DomainFqdnToLdapPath.ps1'" executed="True" result="Success" success="True" time="0.6604" asserts="0" description="function 'Add-DomainFqdnToLdapPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Add-DomainFqdnToLdapPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0074" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Add-DomainFqdnToLdapPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1&quot;)" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Add-DomainFqdnToLdapPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Add-DomainFqdnToLdapPath.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Add-DomainFqdnToLdapPath.ps1&quot;)" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Add-SidInfo.ps1'" executed="True" result="Success" success="True" time="0.6842" asserts="0" description="function 'Add-SidInfo.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Add-SidInfo.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Add-SidInfo.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Add-SidInfo.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Add-SidInfo.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0094" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Add-SidInfo.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Add-SidInfo.ps1&quot;)" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="0.7025" asserts="0" description="function 'ConvertFrom-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-DirectoryEntry.ps1&quot;)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0056" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-DirectoryEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-DirectoryEntry.ps1&quot;)" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-IdentityReferenceResolved.ps1'" executed="True" result="Success" success="True" time="0.7285" asserts="0" description="function 'ConvertFrom-IdentityReferenceResolved.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-IdentityReferenceResolved.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.013" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-IdentityReferenceResolved.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-IdentityReferenceResolved.ps1&quot;)" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-IdentityReferenceResolved.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-IdentityReferenceResolved.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-IdentityReferenceResolved.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'" executed="True" result="Success" success="True" time="0.7513" asserts="0" description="function 'ConvertFrom-PropertyValueCollectionToString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-PropertyValueCollectionToString.ps1&quot;)" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-PropertyValueCollectionToString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-PropertyValueCollectionToString.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'" executed="True" result="Success" success="True" time="0.7786" asserts="0" description="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0085" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-ResultPropertyValueCollectionToString.ps1&quot;)" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0129" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-ResultPropertyValueCollectionToString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-ResultPropertyValueCollectionToString.ps1&quot;)" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-SearchResult.ps1'" executed="True" result="Success" success="True" time="0.802" asserts="0" description="function 'ConvertFrom-SearchResult.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SearchResult.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0098" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-SearchResult.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-SearchResult.ps1&quot;)" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SearchResult.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-SearchResult.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-SearchResult.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertFrom-SidString.ps1'" executed="True" result="Success" success="True" time="0.8312" asserts="0" description="function 'ConvertFrom-SidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.013" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertFrom-SidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-SidString.ps1&quot;)" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertFrom-SidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0074" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertFrom-SidString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertFrom-SidString.ps1&quot;)" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DecStringRepresentation.ps1'" executed="True" result="Success" success="True" time="0.8545" asserts="0" description="function 'ConvertTo-DecStringRepresentation.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DecStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0084" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DecStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DecStringRepresentation.ps1&quot;)" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DecStringRepresentation.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DecStringRepresentation.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DecStringRepresentation.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DistinguishedName.ps1'" executed="True" result="Success" success="True" time="0.8767" asserts="0" description="function 'ConvertTo-DistinguishedName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DistinguishedName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DistinguishedName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DistinguishedName.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DistinguishedName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0113" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DistinguishedName.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DistinguishedName.ps1&quot;)" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DomainNetBIOS.ps1'" executed="True" result="Success" success="True" time="0.8982" asserts="0" description="function 'ConvertTo-DomainNetBIOS.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainNetBIOS.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DomainNetBIOS.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DomainNetBIOS.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainNetBIOS.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DomainNetBIOS.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DomainNetBIOS.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-DomainSidString.ps1'" executed="True" result="Success" success="True" time="0.9205" asserts="0" description="function 'ConvertTo-DomainSidString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainSidString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0099" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-DomainSidString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DomainSidString.ps1&quot;)" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-DomainSidString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-DomainSidString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-DomainSidString.ps1&quot;)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-Fqdn.ps1'" executed="True" result="Success" success="True" time="0.9402" asserts="0" description="function 'ConvertTo-Fqdn.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-Fqdn.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-Fqdn.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-Fqdn.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-Fqdn.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-Fqdn.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-Fqdn.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-HexStringRepresentation.ps1'" executed="True" result="Success" success="True" time="0.9636" asserts="0" description="function 'ConvertTo-HexStringRepresentation.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-HexStringRepresentation.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1&quot;)" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentation.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-HexStringRepresentation.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-HexStringRepresentation.ps1&quot;)" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'" executed="True" result="Success" success="True" time="0.9827" asserts="0" description="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.005" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-HexStringRepresentationForLDAPFilterString.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-HexStringRepresentationForLDAPFilterString.ps1&quot;)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SidByteArray.ps1'" executed="True" result="Success" success="True" time="1.0057" asserts="0" description="function 'ConvertTo-SidByteArray.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidByteArray.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SidByteArray.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-SidByteArray.ps1&quot;)" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SidByteArray.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SidByteArray.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\ConvertTo-SidByteArray.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-AdsiGroupMember.ps1'" executed="True" result="Success" success="True" time="1.0279" asserts="0" description="function 'Expand-AdsiGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.007" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Expand-AdsiGroupMember.ps1&quot;)" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-AdsiGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0064" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-AdsiGroupMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Expand-AdsiGroupMember.ps1&quot;)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="1.0468" asserts="0" description="function 'Expand-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Expand-WinNTGroupMember.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0052" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-WinNTGroupMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Expand-WinNTGroupMember.ps1&quot;)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-LocalAdsiServerSid.ps1'" executed="True" result="Success" success="True" time="1.0731" asserts="0" description="function 'Find-LocalAdsiServerSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-LocalAdsiServerSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-LocalAdsiServerSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Find-LocalAdsiServerSid.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-LocalAdsiServerSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0127" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-LocalAdsiServerSid.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Find-LocalAdsiServerSid.ps1&quot;)" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiGroup.ps1'" executed="True" result="Success" success="True" time="1.0971" asserts="0" description="function 'Get-AdsiGroup.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroup.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0101" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiGroup.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiGroup.ps1&quot;)" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroup.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiGroup.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiGroup.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiGroupMember.ps1'" executed="True" result="Success" success="True" time="1.1257" asserts="0" description="function 'Get-AdsiGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiGroupMember.ps1&quot;)" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0085" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiGroupMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiGroupMember.ps1&quot;)" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-AdsiServer.ps1'" executed="True" result="Success" success="True" time="1.1568" asserts="0" description="function 'Get-AdsiServer.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiServer.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-AdsiServer.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiServer.ps1&quot;)" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-AdsiServer.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0086" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-AdsiServer.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-AdsiServer.ps1&quot;)" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-CurrentDomain.ps1'" executed="True" result="Success" success="True" time="1.1825" asserts="0" description="function 'Get-CurrentDomain.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-CurrentDomain.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0109" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-CurrentDomain.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-CurrentDomain.ps1&quot;)" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-CurrentDomain.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-CurrentDomain.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-CurrentDomain.ps1&quot;)" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-DirectoryEntry.ps1'" executed="True" result="Success" success="True" time="1.2124" asserts="0" description="function 'Get-DirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0105" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-DirectoryEntry.ps1&quot;)" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0133" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DirectoryEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-DirectoryEntry.ps1&quot;)" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownCaptionHashTable.ps1'" executed="True" result="Success" success="True" time="1.2356" asserts="0" description="function 'Get-KnownCaptionHashTable.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownCaptionHashTable.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0089" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownCaptionHashTable.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownCaptionHashTable.ps1&quot;)" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownCaptionHashTable.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownCaptionHashTable.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownCaptionHashTable.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSid.ps1'" executed="True" result="Success" success="True" time="1.2675" asserts="0" description="function 'Get-KnownSid.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSid.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSid.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSid.ps1&quot;)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSid.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0077" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSid.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSid.ps1&quot;)" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSidByName.ps1'" executed="True" result="Success" success="True" time="1.2913" asserts="0" description="function 'Get-KnownSidByName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidByName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSidByName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSidByName.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidByName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0081" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSidByName.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSidByName.ps1&quot;)" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-KnownSidHashtable.ps1'" executed="True" result="Success" success="True" time="1.3274" asserts="0" description="function 'Get-KnownSidHashtable.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidHashtable.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0213" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-KnownSidHashtable.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSidHashtable.ps1&quot;)" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-KnownSidHashtable.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0096" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-KnownSidHashtable.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-KnownSidHashtable.ps1&quot;)" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-ParentDomainDnsName.ps1'" executed="True" result="Success" success="True" time="1.3538" asserts="0" description="function 'Get-ParentDomainDnsName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-ParentDomainDnsName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0138" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-ParentDomainDnsName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-ParentDomainDnsName.ps1&quot;)" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-ParentDomainDnsName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-ParentDomainDnsName.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-ParentDomainDnsName.ps1&quot;)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-TrustedDomain.ps1'" executed="True" result="Success" success="True" time="1.3832" asserts="0" description="function 'Get-TrustedDomain.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-TrustedDomain.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-TrustedDomain.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-TrustedDomain.ps1&quot;)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-TrustedDomain.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0052" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-TrustedDomain.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-TrustedDomain.ps1&quot;)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-WinNTGroupMember.ps1'" executed="True" result="Success" success="True" time="1.4064" asserts="0" description="function 'Get-WinNTGroupMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.008" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-WinNTGroupMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-WinNTGroupMember.ps1&quot;)" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-WinNTGroupMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0092" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-WinNTGroupMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Get-WinNTGroupMember.ps1&quot;)" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Invoke-ComObject.ps1'" executed="True" result="Success" success="True" time="1.4326" asserts="0" description="function 'Invoke-ComObject.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ComObject.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0061" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Invoke-ComObject.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Invoke-ComObject.ps1&quot;)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Invoke-ComObject.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0127" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Invoke-ComObject.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Invoke-ComObject.ps1&quot;)" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'New-FakeDirectoryEntry.ps1'" executed="True" result="Success" success="True" time="1.4533" asserts="0" description="function 'New-FakeDirectoryEntry.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'New-FakeDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0056" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'New-FakeDirectoryEntry.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\New-FakeDirectoryEntry.ps1&quot;)" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'New-FakeDirectoryEntry.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0081" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'New-FakeDirectoryEntry.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\New-FakeDirectoryEntry.ps1&quot;)" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-IdentityReference.ps1'" executed="True" result="Success" success="True" time="1.482" asserts="0" description="function 'Resolve-IdentityReference.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdentityReference.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0122" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-IdentityReference.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Resolve-IdentityReference.ps1&quot;)" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-IdentityReference.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.009" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-IdentityReference.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Resolve-IdentityReference.ps1&quot;)" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Resolve-ServiceNameToSID.ps1'" executed="True" result="Success" success="True" time="1.5055" asserts="0" description="function 'Resolve-ServiceNameToSID.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Resolve-ServiceNameToSID.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0054" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Resolve-ServiceNameToSID.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Resolve-ServiceNameToSID.ps1&quot;)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Resolve-ServiceNameToSID.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0112" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Resolve-ServiceNameToSID.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Resolve-ServiceNameToSID.ps1&quot;)" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Search-Directory.ps1'" executed="True" result="Success" success="True" time="1.5249" asserts="0" description="function 'Search-Directory.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Search-Directory.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Search-Directory.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Search-Directory.ps1&quot;)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Search-Directory.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Search-Directory.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\src\functions\public\Search-Directory.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1" executed="True" result="Failure" success="False" time="10.2682" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath" executed="True" result="Failure" success="False" time="0.2735" asserts="0" description="help for Add-DomainFqdnToLdapPath">
            <results>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0709" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'Cache'.has a description" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'Cache'.has the correct parameter type" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0895" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DebugOutputStream'.has a description" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DirectoryPath'" executed="True" result="Success" success="True" time="0.112" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DirectoryPath'.has a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1593" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ProgressAction'.has a description" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.1874" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisFqdn'.has a description" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.21" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisHostName'.has a description" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2339" asserts="0" description="help for Add-DomainFqdnToLdapPath.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'WhoAmI'.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-DomainFqdnToLdapPath.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Add-DomainFqdnToLdapPath.is not auto-generated" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Add-DomainFqdnToLdapPath.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Add-DomainFqdnToLdapPath.has example code" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Add-DomainFqdnToLdapPath.has example help" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Add-SidInfo" executed="True" result="Failure" success="False" time="0.4343" asserts="0" description="help for Add-SidInfo">
            <results>
              <test-suite type="TestFixture" name="help for Add-SidInfo.- Help for parameter 'DomainsBySid'" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="help for Add-SidInfo.- Help for parameter 'DomainsBySid'">
                <results>
                  <test-case description="has a description" name="help for Add-SidInfo.- Help for parameter 'DomainsBySid'.has a description" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-SidInfo.- Help for parameter 'DomainsBySid'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-SidInfo.- Help for parameter 'DomainsBySid'.has the correct parameter type" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-SidInfo.- Help for parameter 'InputObject'" executed="True" result="Success" success="True" time="0.0622" asserts="0" description="help for Add-SidInfo.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Add-SidInfo.- Help for parameter 'InputObject'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Add-SidInfo.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Add-SidInfo.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Add-SidInfo.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.107" asserts="0" description="help for Add-SidInfo.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Add-SidInfo.- Help for parameter 'ProgressAction'.has a description" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Add-SidInfo.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0243" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Add-SidInfo.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Add-SidInfo.is not auto-generated" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Add-SidInfo.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Add-SidInfo.has example code" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Add-SidInfo.has example help" time="0.003" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-DirectoryEntry" executed="True" result="Failure" success="False" time="0.6281" asserts="0" description="help for ConvertFrom-DirectoryEntry">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'DirectoryEntry'" executed="True" result="Failure" success="False" time="0.1213" asserts="0" description="help for ConvertFrom-DirectoryEntry.- Help for parameter 'DirectoryEntry'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'DirectoryEntry'.has a description" time="0.0158" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'DirectoryEntry'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'DirectoryEntry'.has the correct parameter type" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1613" asserts="0" description="help for ConvertFrom-DirectoryEntry.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'ProgressAction'.has a description" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-DirectoryEntry.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0216" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-DirectoryEntry.is not auto-generated" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-DirectoryEntry.has a description" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-DirectoryEntry.has example code" time="0.0205" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for ConvertFrom-DirectoryEntry.has example help" time="0.0361" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved" executed="True" result="Failure" success="False" time="0.9856" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'AccountProperty'" executed="True" result="Success" success="True" time="0.0529" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'AccountProperty'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'AccountProperty'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'AccountProperty'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'AccountProperty'.has the correct parameter type" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0801" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'Cache'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'Cache'.has the correct parameter type" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'CurrentDomain'" executed="True" result="Success" success="True" time="0.1052" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'CurrentDomain'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'CurrentDomain'.has a description" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'CurrentDomain'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'CurrentDomain'.has the correct parameter type" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.1433" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'DebugOutputStream'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'IdentityReference'" executed="True" result="Success" success="True" time="0.1676" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'IdentityReference'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'IdentityReference'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'IdentityReference'.has the correct [mandatory] value" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'IdentityReference'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'NoGroupMembers'" executed="True" result="Success" success="True" time="0.1938" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'NoGroupMembers'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'NoGroupMembers'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'NoGroupMembers'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'NoGroupMembers'.has the correct parameter type" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.239" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ProgressAction'.has a description" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0179" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2697" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisFqdn'.has a description" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2947" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisHostName'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3199" asserts="0" description="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'WhoAmI'.has a description" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-IdentityReferenceResolved.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-IdentityReferenceResolved.is not auto-generated" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-IdentityReferenceResolved.has a description" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-IdentityReferenceResolved.has example code" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertFrom-IdentityReferenceResolved.has example help" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-PropertyValueCollectionToString" executed="True" result="Failure" success="False" time="1.0866" asserts="0" description="help for ConvertFrom-PropertyValueCollectionToString">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-PropertyValueCollectionToString.- Help for parameter 'PropertyValueCollection'" executed="True" result="Failure" success="False" time="0.0694" asserts="0" description="help for ConvertFrom-PropertyValueCollectionToString.- Help for parameter 'PropertyValueCollection'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-PropertyValueCollectionToString.- Help for parameter 'PropertyValueCollection'.has a description" time="0.0102" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-PropertyValueCollectionToString.- Help for parameter 'PropertyValueCollection'.has the correct [mandatory] value" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-PropertyValueCollectionToString.- Help for parameter 'PropertyValueCollection'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-PropertyValueCollectionToString.is not auto-generated" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-PropertyValueCollectionToString.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-PropertyValueCollectionToString.has example code" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertFrom-PropertyValueCollectionToString.has example help" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-ResultPropertyValueCollectionToString" executed="True" result="Failure" success="False" time="1.2146" asserts="0" description="help for ConvertFrom-ResultPropertyValueCollectionToString">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-ResultPropertyValueCollectionToString.- Help for parameter 'ResultPropertyValueCollection'" executed="True" result="Failure" success="False" time="0.0629" asserts="0" description="help for ConvertFrom-ResultPropertyValueCollectionToString.- Help for parameter 'ResultPropertyValueCollection'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-ResultPropertyValueCollectionToString.- Help for parameter 'ResultPropertyValueCollection'.has a description" time="0.0237" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-ResultPropertyValueCollectionToString.- Help for parameter 'ResultPropertyValueCollection'.has the correct [mandatory] value" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-ResultPropertyValueCollectionToString.- Help for parameter 'ResultPropertyValueCollection'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-ResultPropertyValueCollectionToString.is not auto-generated" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-ResultPropertyValueCollectionToString.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-ResultPropertyValueCollectionToString.has example code" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertFrom-ResultPropertyValueCollectionToString.has example help" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-SearchResult" executed="True" result="Failure" success="False" time="1.3719" asserts="0" description="help for ConvertFrom-SearchResult">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-SearchResult.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.0743" asserts="0" description="help for ConvertFrom-SearchResult.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SearchResult.- Help for parameter 'ProgressAction'.has a description" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SearchResult.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SearchResult.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SearchResult.- Help for parameter 'SearchResult'" executed="True" result="Failure" success="False" time="0.1022" asserts="0" description="help for ConvertFrom-SearchResult.- Help for parameter 'SearchResult'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SearchResult.- Help for parameter 'SearchResult'.has a description" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SearchResult.- Help for parameter 'SearchResult'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SearchResult.- Help for parameter 'SearchResult'.has the correct parameter type" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-SearchResult.is not auto-generated" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-SearchResult.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-SearchResult.has example code" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for ConvertFrom-SearchResult.has example help" time="0.025" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertFrom-SidString" executed="True" result="Failure" success="False" time="1.609" asserts="0" description="help for ConvertFrom-SidString">
            <results>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'Cache'" executed="True" result="Failure" success="False" time="0.0438" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'Cache'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'Cache'.has the correct parameter type" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 0.
Expected: 'PSReference'
But was:  'System.Management.Automation.PSReference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.0739" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'DebugOutputStream'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0155" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1034" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'ProgressAction'.has a description" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0136" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'SID'" executed="True" result="Failure" success="False" time="0.1261" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'SID'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'SID'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'SID'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'SID'.has the correct parameter type" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.1547" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'ThisFqdn'.has a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.1826" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'ThisHostName'.has a description" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertFrom-SidString.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.2126" asserts="0" description="help for ConvertFrom-SidString.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertFrom-SidString.- Help for parameter 'WhoAmI'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertFrom-SidString.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertFrom-SidString.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertFrom-SidString.is not auto-generated" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertFrom-SidString.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertFrom-SidString.has example code" time="0.003" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertFrom-SidString.has example help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-DecStringRepresentation" executed="True" result="Success" success="True" time="1.7086" asserts="0" description="help for ConvertTo-DecStringRepresentation">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-DecStringRepresentation.- Help for parameter 'ByteArray'" executed="True" result="Success" success="True" time="0.0599" asserts="0" description="help for ConvertTo-DecStringRepresentation.- Help for parameter 'ByteArray'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DecStringRepresentation.- Help for parameter 'ByteArray'.has a description" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DecStringRepresentation.- Help for parameter 'ByteArray'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DecStringRepresentation.- Help for parameter 'ByteArray'.has the correct parameter type" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-DecStringRepresentation.is not auto-generated" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-DecStringRepresentation.has a description" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-DecStringRepresentation.has example code" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-DecStringRepresentation.has example help" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName" executed="True" result="Failure" success="False" time="2.1006" asserts="0" description="help for ConvertTo-DistinguishedName">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'AdsiProvider'" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'AdsiProvider'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'AdsiProvider'.has a description" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'AdsiProvider'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'AdsiProvider'.has the correct parameter type" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0846" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Cache'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Cache'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.1114" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DebugOutputStream'.has a description" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Domain'" executed="True" result="Success" success="True" time="0.1413" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'Domain'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Domain'.has a description" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Domain'.has the correct [mandatory] value" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'Domain'.has the correct parameter type" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DomainFQDN'" executed="True" result="Success" success="True" time="0.1591" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'DomainFQDN'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DomainFQDN'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DomainFQDN'.has the correct [mandatory] value" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'DomainFQDN'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InitType'" executed="True" result="Success" success="True" time="0.1921" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'InitType'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InitType'.has a description" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InitType'.has the correct [mandatory] value" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InitType'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InputType'" executed="True" result="Success" success="True" time="0.2152" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'InputType'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InputType'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InputType'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'InputType'.has the correct parameter type" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'OutputType'" executed="True" result="Success" success="True" time="0.2316" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'OutputType'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'OutputType'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'OutputType'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'OutputType'.has the correct parameter type" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.2683" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ProgressAction'.has a description" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2919" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisFqdn'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.3198" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisHostName'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DistinguishedName.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3463" asserts="0" description="help for ConvertTo-DistinguishedName.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DistinguishedName.- Help for parameter 'WhoAmI'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DistinguishedName.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DistinguishedName.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-DistinguishedName.is not auto-generated" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-DistinguishedName.has a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-DistinguishedName.has example code" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-DistinguishedName.has example help" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS" executed="True" result="Failure" success="False" time="2.4138" asserts="0" description="help for ConvertTo-DomainNetBIOS">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'AdsiProvider'" executed="True" result="Failure" success="False" time="0.0572" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'AdsiProvider'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'AdsiProvider'.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'AdsiProvider'.has the correct [mandatory] value" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'AdsiProvider'.has the correct parameter type" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'Cache'" executed="True" result="Failure" success="False" time="0.0842" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'Cache'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'Cache'.has the correct parameter type" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 0.
Expected: 'PSReference'
But was:  'System.Management.Automation.PSReference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.1195" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DebugOutputStream'.has a description" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DomainFQDN'" executed="True" result="Failure" success="False" time="0.1572" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DomainFQDN'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DomainFQDN'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DomainFQDN'.has the correct [mandatory] value" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'DomainFQDN'.has the correct parameter type" time="0.0123" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1923" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ProgressAction'.has a description" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0168" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.228" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisFqdn'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0198" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.2622" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisHostName'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.2889" asserts="0" description="help for ConvertTo-DomainNetBIOS.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'WhoAmI'.has a description" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainNetBIOS.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-DomainNetBIOS.is not auto-generated" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-DomainNetBIOS.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-DomainNetBIOS.has example code" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-DomainNetBIOS.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString" executed="True" result="Failure" success="False" time="2.7098" asserts="0" description="help for ConvertTo-DomainSidString">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'AdsiProvider'" executed="True" result="Failure" success="False" time="0.043" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'AdsiProvider'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'AdsiProvider'.has a description" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'AdsiProvider'.has the correct [mandatory] value" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'AdsiProvider'.has the correct parameter type" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'Cache'" executed="True" result="Failure" success="False" time="0.068" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'Cache'.has a description" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'Cache'.has the correct parameter type" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 0.
Expected: 'PSReference'
But was:  'System.Management.Automation.PSReference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.0911" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'DebugOutputStream'.has a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'DomainDnsName'" executed="True" result="Failure" success="False" time="0.1162" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'DomainDnsName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'DomainDnsName'.has a description" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'DomainDnsName'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'DomainDnsName'.has the correct parameter type" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1424" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'ProgressAction'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.1703" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisFqdn'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0151" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.2291" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisHostName'.has a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0384" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-DomainSidString.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.282" asserts="0" description="help for ConvertTo-DomainSidString.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-DomainSidString.- Help for parameter 'WhoAmI'.has a description" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-DomainSidString.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-DomainSidString.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0145" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-DomainSidString.is not auto-generated" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-DomainSidString.has a description" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-DomainSidString.has example code" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-DomainSidString.has example help" time="0.003" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-Fqdn" executed="True" result="Failure" success="False" time="2.9567" asserts="0" description="help for ConvertTo-Fqdn">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'Cache'.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'Cache'.has the correct parameter type" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0605" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'DebugOutputStream'.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'DistinguishedName'" executed="True" result="Success" success="True" time="0.0931" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'DistinguishedName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'DistinguishedName'.has a description" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'DistinguishedName'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'DistinguishedName'.has the correct parameter type" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'NetBIOS'" executed="True" result="Success" success="True" time="0.1125" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'NetBIOS'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'NetBIOS'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'NetBIOS'.has the correct [mandatory] value" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'NetBIOS'.has the correct parameter type" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1472" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'ProgressAction'.has a description" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0143" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.1647" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisFqdn'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.1877" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisHostName'.has a description" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-Fqdn.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2111" asserts="0" description="help for ConvertTo-Fqdn.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-Fqdn.- Help for parameter 'WhoAmI'.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-Fqdn.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-Fqdn.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-Fqdn.is not auto-generated" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-Fqdn.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-Fqdn.has example code" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-Fqdn.has example help" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-HexStringRepresentation" executed="True" result="Success" success="True" time="3.0414" asserts="0" description="help for ConvertTo-HexStringRepresentation">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-HexStringRepresentation.- Help for parameter 'SIDByteArray'" executed="True" result="Success" success="True" time="0.0479" asserts="0" description="help for ConvertTo-HexStringRepresentation.- Help for parameter 'SIDByteArray'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-HexStringRepresentation.- Help for parameter 'SIDByteArray'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-HexStringRepresentation.- Help for parameter 'SIDByteArray'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-HexStringRepresentation.- Help for parameter 'SIDByteArray'.has the correct parameter type" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-HexStringRepresentation.is not auto-generated" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-HexStringRepresentation.has a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-HexStringRepresentation.has example code" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-HexStringRepresentation.has example help" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString" executed="True" result="Success" success="True" time="3.1416" asserts="0" description="help for ConvertTo-HexStringRepresentationForLDAPFilterString">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.- Help for parameter 'SIDByteArray'" executed="True" result="Success" success="True" time="0.0664" asserts="0" description="help for ConvertTo-HexStringRepresentationForLDAPFilterString.- Help for parameter 'SIDByteArray'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.- Help for parameter 'SIDByteArray'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.- Help for parameter 'SIDByteArray'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.- Help for parameter 'SIDByteArray'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.is not auto-generated" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.has a description" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.has example code" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-HexStringRepresentationForLDAPFilterString.has example help" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for ConvertTo-SidByteArray" executed="True" result="Failure" success="False" time="3.2873" asserts="0" description="help for ConvertTo-SidByteArray">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-SidByteArray.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.0782" asserts="0" description="help for ConvertTo-SidByteArray.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SidByteArray.- Help for parameter 'ProgressAction'.has a description" time="0.0102" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SidByteArray.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0095" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SidByteArray.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SidByteArray.- Help for parameter 'SidString'" executed="True" result="Success" success="True" time="0.1099" asserts="0" description="help for ConvertTo-SidByteArray.- Help for parameter 'SidString'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SidByteArray.- Help for parameter 'SidString'.has a description" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SidByteArray.- Help for parameter 'SidString'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SidByteArray.- Help for parameter 'SidString'.has the correct parameter type" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-SidByteArray.is not auto-generated" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-SidByteArray.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-SidByteArray.has example code" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-SidByteArray.has example help" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember" executed="True" result="Failure" success="False" time="3.5821" asserts="0" description="help for Expand-AdsiGroupMember">
            <results>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'Cache'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'Cache'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0717" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'DirectoryEntry'" executed="True" result="Success" success="True" time="0.0893" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'DirectoryEntry'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'DirectoryEntry'.has a description" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'DirectoryEntry'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'DirectoryEntry'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1357" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'ProgressAction'.has a description" time="0.0252" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.2013" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has a description" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2205" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2362" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisHostName'.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AdsiGroupMember.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2584" asserts="0" description="help for Expand-AdsiGroupMember.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Expand-AdsiGroupMember.- Help for parameter 'WhoAmI'.has a description" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AdsiGroupMember.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AdsiGroupMember.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-AdsiGroupMember.is not auto-generated" time="0.005" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-AdsiGroupMember.has a description" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-AdsiGroupMember.has example code" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-AdsiGroupMember.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember" executed="True" result="Failure" success="False" time="3.8761" asserts="0" description="help for Expand-WinNTGroupMember">
            <results>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0701" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'Cache'.has a description" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'Cache'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0975" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has a description" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'DirectoryEntry'" executed="True" result="Success" success="True" time="0.1236" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'DirectoryEntry'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has a description" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.183" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'ProgressAction'.has a description" time="0.0307" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0098" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2078" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has a description" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2346" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisHostName'.has a description" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-WinNTGroupMember.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2574" asserts="0" description="help for Expand-WinNTGroupMember.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Expand-WinNTGroupMember.- Help for parameter 'WhoAmI'.has a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-WinNTGroupMember.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-WinNTGroupMember.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-WinNTGroupMember.is not auto-generated" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-WinNTGroupMember.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-WinNTGroupMember.has example code" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-WinNTGroupMember.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid" executed="True" result="Failure" success="False" time="4.118" asserts="0" description="help for Find-LocalAdsiServerSid">
            <results>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'Cache'" executed="True" result="Failure" success="False" time="0.0564" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'Cache'.has a description" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'Cache'.has the correct parameter type" time="0.0107" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 0.
Expected: 'PSReference'
But was:  'System.Management.Automation.PSReference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ComputerName'" executed="True" result="Failure" success="False" time="0.091" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'ComputerName'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ComputerName'.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ComputerName'.has the correct [mandatory] value" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ComputerName'.has the correct parameter type" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.1243" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'DebugOutputStream'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0166" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1468" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ProgressAction'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.1727" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisFqdn'.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.1995" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisHostName'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0117" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-LocalAdsiServerSid.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.229" asserts="0" description="help for Find-LocalAdsiServerSid.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Find-LocalAdsiServerSid.- Help for parameter 'WhoAmI'.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-LocalAdsiServerSid.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-LocalAdsiServerSid.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0143" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Find-LocalAdsiServerSid.is not auto-generated" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Find-LocalAdsiServerSid.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Find-LocalAdsiServerSid.has example code" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Find-LocalAdsiServerSid.has example help" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-AdsiGroup" executed="True" result="Failure" success="False" time="4.4485" asserts="0" description="help for Get-AdsiGroup">
            <results>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'Cache'.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'Cache'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0874" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'DebugOutputStream'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'DirectoryPath'" executed="True" result="Success" success="True" time="0.111" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'DirectoryPath'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'GroupName'" executed="True" result="Success" success="True" time="0.1363" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'GroupName'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'GroupName'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'GroupName'.has the correct [mandatory] value" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'GroupName'.has the correct parameter type" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1773" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'ProgressAction'.has a description" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0153" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.2093" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'PropertiesToLoad'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2338" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'ThisFqdn'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2653" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'ThisHostName'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroup.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.295" asserts="0" description="help for Get-AdsiGroup.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroup.- Help for parameter 'WhoAmI'.has a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroup.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroup.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-AdsiGroup.is not auto-generated" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-AdsiGroup.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-AdsiGroup.has example code" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-AdsiGroup.has example help" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-AdsiGroupMember" executed="True" result="Failure" success="False" time="4.7718" asserts="0" description="help for Get-AdsiGroupMember">
            <results>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'Cache'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'Cache'.has the correct parameter type" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0707" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'Group'" executed="True" result="Success" success="True" time="0.0995" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'Group'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'Group'.has a description" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'Group'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'Group'.has the correct parameter type" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'NoRecurse'" executed="True" result="Success" success="True" time="0.1357" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'NoRecurse'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'NoRecurse'.has a description" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'NoRecurse'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'NoRecurse'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'PrimaryGroupOnly'" executed="True" result="Success" success="True" time="0.1598" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'PrimaryGroupOnly'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'PrimaryGroupOnly'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'PrimaryGroupOnly'.has the correct [mandatory] value" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'PrimaryGroupOnly'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1902" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'ProgressAction'.has a description" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.2142" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has a description" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2377" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2552" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisHostName'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiGroupMember.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2846" asserts="0" description="help for Get-AdsiGroupMember.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiGroupMember.- Help for parameter 'WhoAmI'.has a description" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiGroupMember.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiGroupMember.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-AdsiGroupMember.is not auto-generated" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-AdsiGroupMember.has a description" time="0.003" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-AdsiGroupMember.has example code" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-AdsiGroupMember.has example help" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-AdsiServer" executed="True" result="Failure" success="False" time="5.1085" asserts="0" description="help for Get-AdsiServer">
            <results>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0629" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'Cache'.has a description" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'Cache'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.09" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'DebugOutputStream'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'Fqdn'" executed="True" result="Success" success="True" time="0.1146" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'Fqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'Fqdn'.has a description" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'Fqdn'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'Fqdn'.has the correct parameter type" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'Netbios'" executed="True" result="Success" success="True" time="0.1533" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'Netbios'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'Netbios'.has a description" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'Netbios'.has the correct [mandatory] value" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'Netbios'.has the correct parameter type" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1994" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'ProgressAction'.has a description" time="0.0116" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0193" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'RemoveCimSession'" executed="True" result="Success" success="True" time="0.2261" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'RemoveCimSession'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'RemoveCimSession'.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'RemoveCimSession'.has the correct [mandatory] value" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'RemoveCimSession'.has the correct parameter type" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2453" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'ThisFqdn'.has a description" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2732" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'ThisHostName'.has a description" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-AdsiServer.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3025" asserts="0" description="help for Get-AdsiServer.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-AdsiServer.- Help for parameter 'WhoAmI'.has a description" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-AdsiServer.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-AdsiServer.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-AdsiServer.is not auto-generated" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-AdsiServer.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-AdsiServer.has example code" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-AdsiServer.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-CurrentDomain" executed="True" result="Failure" success="False" time="5.4013" asserts="0" description="help for Get-CurrentDomain">
            <results>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0608" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'Cache'.has a description" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'Cache'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'ComputerName'" executed="True" result="Success" success="True" time="0.0839" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'ComputerName'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'ComputerName'.has a description" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'ComputerName'.has the correct [mandatory] value" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'ComputerName'.has the correct parameter type" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'DebugOutputStream'.has a description" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1719" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'ProgressAction'.has a description" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0322" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0097" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2041" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'ThisFqdn'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2287" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'ThisHostName'.has a description" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-CurrentDomain.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2575" asserts="0" description="help for Get-CurrentDomain.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-CurrentDomain.- Help for parameter 'WhoAmI'.has a description" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-CurrentDomain.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-CurrentDomain.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-CurrentDomain.is not auto-generated" time="0.01" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-CurrentDomain.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-CurrentDomain.has example code" time="0.005" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-CurrentDomain.has example help" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-DirectoryEntry" executed="True" result="Failure" success="False" time="5.7579" asserts="0" description="help for Get-DirectoryEntry">
            <results>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0641" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'Cache'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'Cache'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'Credential'" executed="True" result="Success" success="True" time="0.0929" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'Credential'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'Credential'.has a description" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'Credential'.has the correct [mandatory] value" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'Credential'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.1166" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'DebugOutputStream'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'DirectoryPath'" executed="True" result="Success" success="True" time="0.1554" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'DirectoryPath'.has a description" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1992" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'ProgressAction'.has a description" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0172" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.2296" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'PropertiesToLoad'.has a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'SidTypeMap'" executed="True" result="Failure" success="False" time="0.2552" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'SidTypeMap'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'SidTypeMap'.has a description" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'SidTypeMap'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'SidTypeMap'.has the correct parameter type" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2728" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'ThisFqdn'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2978" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'ThisHostName'.has a description" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectoryEntry.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3215" asserts="0" description="help for Get-DirectoryEntry.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectoryEntry.- Help for parameter 'WhoAmI'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectoryEntry.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectoryEntry.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-DirectoryEntry.is not auto-generated" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-DirectoryEntry.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-DirectoryEntry.has example code" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-DirectoryEntry.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-KnownCaptionHashTable" executed="True" result="Failure" success="False" time="5.811" asserts="0" description="help for Get-KnownCaptionHashTable">
            <results>
              <test-suite type="TestFixture" name="help for Get-KnownCaptionHashTable.- Help for parameter 'WellKnownSidBySid'" executed="True" result="Failure" success="False" time="0.0402" asserts="0" description="help for Get-KnownCaptionHashTable.- Help for parameter 'WellKnownSidBySid'">
                <results>
                  <test-case description="has a description" name="help for Get-KnownCaptionHashTable.- Help for parameter 'WellKnownSidBySid'.has a description" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-KnownCaptionHashTable.- Help for parameter 'WellKnownSidBySid'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-KnownCaptionHashTable.- Help for parameter 'WellKnownSidBySid'.has the correct parameter type" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-KnownCaptionHashTable.is not auto-generated" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-KnownCaptionHashTable.has a description" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-KnownCaptionHashTable.has example code" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-KnownCaptionHashTable.has example help" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-KnownSid" executed="True" result="Failure" success="False" time="5.8668" asserts="0" description="help for Get-KnownSid">
            <results>
              <test-suite type="TestFixture" name="help for Get-KnownSid.- Help for parameter 'SID'" executed="True" result="Failure" success="False" time="0.0444" asserts="0" description="help for Get-KnownSid.- Help for parameter 'SID'">
                <results>
                  <test-case description="has a description" name="help for Get-KnownSid.- Help for parameter 'SID'.has a description" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-KnownSid.- Help for parameter 'SID'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-KnownSid.- Help for parameter 'SID'.has the correct parameter type" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-KnownSid.is not auto-generated" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-KnownSid.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-KnownSid.has example code" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-KnownSid.has example help" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-KnownSidByName" executed="True" result="Failure" success="False" time="5.9207" asserts="0" description="help for Get-KnownSidByName">
            <results>
              <test-suite type="TestFixture" name="help for Get-KnownSidByName.- Help for parameter 'WellKnownSIDBySID'" executed="True" result="Failure" success="False" time="0.0429" asserts="0" description="help for Get-KnownSidByName.- Help for parameter 'WellKnownSIDBySID'">
                <results>
                  <test-case description="has a description" name="help for Get-KnownSidByName.- Help for parameter 'WellKnownSIDBySID'.has a description" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-KnownSidByName.- Help for parameter 'WellKnownSIDBySID'.has the correct [mandatory] value" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-KnownSidByName.- Help for parameter 'WellKnownSIDBySID'.has the correct parameter type" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-KnownSidByName.is not auto-generated" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-KnownSidByName.has a description" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-KnownSidByName.has example code" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-KnownSidByName.has example help" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-KnownSidHashTable" executed="True" result="Success" success="True" time="5.9596" asserts="0" description="help for Get-KnownSidHashTable">
            <results>
              <test-case description="is not auto-generated" name="help for Get-KnownSidHashTable.is not auto-generated" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-KnownSidHashTable.has a description" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-KnownSidHashTable.has example code" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-KnownSidHashTable.has example help" time="0.005" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName" executed="True" result="Failure" success="False" time="6.2718" asserts="0" description="help for Get-ParentDomainDnsName">
            <results>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'Cache'" executed="True" result="Failure" success="False" time="0.053" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'Cache'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'Cache'.has the correct parameter type" time="0.0097" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 0.
Expected: 'PSReference'
But was:  'System.Management.Automation.PSReference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'CimSession'" executed="True" result="Failure" success="False" time="0.0882" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'CimSession'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'CimSession'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'CimSession'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'CimSession'.has the correct parameter type" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 10
Actual length:   46
Strings differ at index 0.
Expected: 'CimSession'
But was:  'Microsoft.Management.Infrastructure.CimSession'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.122" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'DebugOutputStream'.has a description" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0104" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'DomainNetbios'" executed="True" result="Failure" success="False" time="0.1544" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'DomainNetbios'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'DomainNetbios'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'DomainNetbios'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'DomainNetbios'.has the correct parameter type" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1771" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'ProgressAction'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'RemoveCimSession'" executed="True" result="Failure" success="False" time="0.2046" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'RemoveCimSession'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'RemoveCimSession'.has a description" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'RemoveCimSession'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'RemoveCimSession'.has the correct parameter type" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 15
Actual length:   44
Strings differ at index 1.
Expected: 'SwitchParameter'
But was:  'System.Management.Automation.SwitchParameter'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.2358" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisFqdn'.has a description" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.2638" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisHostName'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0129" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ParentDomainDnsName.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.298" asserts="0" description="help for Get-ParentDomainDnsName.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-ParentDomainDnsName.- Help for parameter 'WhoAmI'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ParentDomainDnsName.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ParentDomainDnsName.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0184" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-ParentDomainDnsName.is not auto-generated" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-ParentDomainDnsName.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-ParentDomainDnsName.has example code" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-ParentDomainDnsName.has example help" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-TrustedDomain" executed="True" result="Failure" success="False" time="6.4508" asserts="0" description="help for Get-TrustedDomain">
            <results>
              <test-suite type="TestFixture" name="help for Get-TrustedDomain.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="help for Get-TrustedDomain.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-TrustedDomain.- Help for parameter 'Cache'.has a description" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-TrustedDomain.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-TrustedDomain.- Help for parameter 'Cache'.has the correct parameter type" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-TrustedDomain.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0597" asserts="0" description="help for Get-TrustedDomain.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-TrustedDomain.- Help for parameter 'DebugOutputStream'.has a description" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-TrustedDomain.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-TrustedDomain.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-TrustedDomain.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1064" asserts="0" description="help for Get-TrustedDomain.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-TrustedDomain.- Help for parameter 'ProgressAction'.has a description" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-TrustedDomain.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-TrustedDomain.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0208" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-TrustedDomain.- Help for parameter 'ThisHostname'" executed="True" result="Success" success="True" time="0.1234" asserts="0" description="help for Get-TrustedDomain.- Help for parameter 'ThisHostname'">
                <results>
                  <test-case description="has a description" name="help for Get-TrustedDomain.- Help for parameter 'ThisHostname'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-TrustedDomain.- Help for parameter 'ThisHostname'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-TrustedDomain.- Help for parameter 'ThisHostname'.has the correct parameter type" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-TrustedDomain.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.1441" asserts="0" description="help for Get-TrustedDomain.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-TrustedDomain.- Help for parameter 'WhoAmI'.has a description" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-TrustedDomain.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-TrustedDomain.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-TrustedDomain.is not auto-generated" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-TrustedDomain.has a description" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-TrustedDomain.has example code" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-TrustedDomain.has example help" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-WinNTGroupMember" executed="True" result="Failure" success="False" time="6.7259" asserts="0" description="help for Get-WinNTGroupMember">
            <results>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0536" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'Cache'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'Cache'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0796" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has a description" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'DirectoryEntry'" executed="True" result="Success" success="True" time="0.1025" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'DirectoryEntry'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has the correct [mandatory] value" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'DirectoryEntry'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1529" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'ProgressAction'.has a description" time="0.0263" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.1798" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'PropertiesToLoad'.has a description" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2009" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2213" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisHostName'.has a description" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-WinNTGroupMember.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2436" asserts="0" description="help for Get-WinNTGroupMember.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-WinNTGroupMember.- Help for parameter 'WhoAmI'.has a description" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-WinNTGroupMember.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-WinNTGroupMember.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-WinNTGroupMember.is not auto-generated" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-WinNTGroupMember.has a description" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-WinNTGroupMember.has example code" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-WinNTGroupMember.has example help" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Invoke-ComObject" executed="True" result="Failure" success="False" time="6.9481" asserts="0" description="help for Invoke-ComObject">
            <results>
              <test-suite type="TestFixture" name="help for Invoke-ComObject.- Help for parameter 'ComObject'" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="help for Invoke-ComObject.- Help for parameter 'ComObject'">
                <results>
                  <test-case description="has a description" name="help for Invoke-ComObject.- Help for parameter 'ComObject'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Invoke-ComObject.- Help for parameter 'ComObject'.has the correct [mandatory] value" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Invoke-ComObject.- Help for parameter 'ComObject'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Invoke-ComObject.- Help for parameter 'Method'" executed="True" result="Success" success="True" time="0.0876" asserts="0" description="help for Invoke-ComObject.- Help for parameter 'Method'">
                <results>
                  <test-case description="has a description" name="help for Invoke-ComObject.- Help for parameter 'Method'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Invoke-ComObject.- Help for parameter 'Method'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Invoke-ComObject.- Help for parameter 'Method'.has the correct parameter type" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Invoke-ComObject.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1349" asserts="0" description="help for Invoke-ComObject.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Invoke-ComObject.- Help for parameter 'ProgressAction'.has a description" time="0.0106" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Invoke-ComObject.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Invoke-ComObject.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0236" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Invoke-ComObject.- Help for parameter 'Property'" executed="True" result="Success" success="True" time="0.166" asserts="0" description="help for Invoke-ComObject.- Help for parameter 'Property'">
                <results>
                  <test-case description="has a description" name="help for Invoke-ComObject.- Help for parameter 'Property'.has a description" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Invoke-ComObject.- Help for parameter 'Property'.has the correct [mandatory] value" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Invoke-ComObject.- Help for parameter 'Property'.has the correct parameter type" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Invoke-ComObject.- Help for parameter 'Value'" executed="True" result="Success" success="True" time="0.1891" asserts="0" description="help for Invoke-ComObject.- Help for parameter 'Value'">
                <results>
                  <test-case description="has a description" name="help for Invoke-ComObject.- Help for parameter 'Value'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Invoke-ComObject.- Help for parameter 'Value'.has the correct [mandatory] value" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Invoke-ComObject.- Help for parameter 'Value'.has the correct parameter type" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Invoke-ComObject.is not auto-generated" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Invoke-ComObject.has a description" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Invoke-ComObject.has example code" time="0.005" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Invoke-ComObject.has example help" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry" executed="True" result="Failure" success="False" time="7.2745" asserts="0" description="help for New-FakeDirectoryEntry">
            <results>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'Description'" executed="True" result="Failure" success="False" time="0.0637" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'Description'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'Description'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'Description'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'Description'.has the correct parameter type" time="0.0161" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'DirectoryPath'" executed="True" result="Failure" success="False" time="0.1303" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'DirectoryPath'.has a description" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.012" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.1539" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'InputObject'.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'Name'" executed="True" result="Failure" success="False" time="0.1793" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'Name'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'Name'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'Name'.has the correct [mandatory] value" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'Name'.has the correct parameter type" time="0.0128" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameAllowList'" executed="True" result="Failure" success="False" time="0.2062" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'NameAllowList'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameAllowList'.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameAllowList'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameAllowList'.has the correct parameter type" time="0.0132" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameBlockList'" executed="True" result="Failure" success="False" time="0.2286" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'NameBlockList'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameBlockList'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameBlockList'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'NameBlockList'.has the correct parameter type" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'NTAccount'" executed="True" result="Failure" success="False" time="0.2589" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'NTAccount'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'NTAccount'.has a description" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'NTAccount'.has the correct [mandatory] value" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'NTAccount'.has the correct parameter type" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'SchemaClassName'" executed="True" result="Failure" success="False" time="0.2846" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'SchemaClassName'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'SchemaClassName'.has a description" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'SchemaClassName'.has the correct [mandatory] value" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'SchemaClassName'.has the correct parameter type" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-FakeDirectoryEntry.- Help for parameter 'SID'" executed="True" result="Failure" success="False" time="0.315" asserts="0" description="help for New-FakeDirectoryEntry.- Help for parameter 'SID'">
                <results>
                  <test-case description="has a description" name="help for New-FakeDirectoryEntry.- Help for parameter 'SID'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-FakeDirectoryEntry.- Help for parameter 'SID'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-FakeDirectoryEntry.- Help for parameter 'SID'.has the correct parameter type" time="0.0154" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for New-FakeDirectoryEntry.is not auto-generated" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for New-FakeDirectoryEntry.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for New-FakeDirectoryEntry.has example code" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for New-FakeDirectoryEntry.has example help" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Resolve-IdentityReference" executed="True" result="Failure" success="False" time="7.7053" asserts="0" description="help for Resolve-IdentityReference">
            <results>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServer'" executed="True" result="Success" success="True" time="0.0503" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'AdsiServer'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServer'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServer'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServer'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServersByDns'" executed="True" result="Success" success="True" time="0.0841" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'AdsiServersByDns'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServersByDns'.has a description" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServersByDns'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'AdsiServersByDns'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.1066" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'Cache'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'Cache'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.1517" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'DebugOutputStream'.has a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'IdentityReference'" executed="True" result="Success" success="True" time="0.1791" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'IdentityReference'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'IdentityReference'.has a description" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'IdentityReference'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'IdentityReference'.has the correct parameter type" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.2316" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'ProgressAction'.has a description" time="0.0181" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2513" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'ThisFqdn'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2786" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'ThisHostName'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidByCaption'" executed="True" result="Success" success="True" time="0.3606" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidByCaption'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidByCaption'.has a description" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidByCaption'.has the correct [mandatory] value" time="0.0561" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidByCaption'.has the correct parameter type" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidBySid'" executed="True" result="Success" success="True" time="0.3749" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidBySid'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidBySid'.has a description" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidBySid'.has the correct [mandatory] value" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'WellKnownSidBySid'.has the correct parameter type" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-IdentityReference.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3952" asserts="0" description="help for Resolve-IdentityReference.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Resolve-IdentityReference.- Help for parameter 'WhoAmI'.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-IdentityReference.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-IdentityReference.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Resolve-IdentityReference.is not auto-generated" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Resolve-IdentityReference.has a description" time="0.017" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Resolve-IdentityReference.has example code" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Resolve-IdentityReference.has example help" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Resolve-ServiceNameToSID" executed="True" result="Failure" success="False" time="7.7778" asserts="0" description="help for Resolve-ServiceNameToSID">
            <results>
              <test-suite type="TestFixture" name="help for Resolve-ServiceNameToSID.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.0341" asserts="0" description="help for Resolve-ServiceNameToSID.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Resolve-ServiceNameToSID.- Help for parameter 'InputObject'.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-ServiceNameToSID.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-ServiceNameToSID.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Resolve-ServiceNameToSID.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.0603" asserts="0" description="help for Resolve-ServiceNameToSID.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Resolve-ServiceNameToSID.- Help for parameter 'ProgressAction'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Resolve-ServiceNameToSID.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Resolve-ServiceNameToSID.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Resolve-ServiceNameToSID.is not auto-generated" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Resolve-ServiceNameToSID.has a description" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Resolve-ServiceNameToSID.has example code" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Resolve-ServiceNameToSID.has example help" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Search-Directory" executed="True" result="Failure" success="False" time="8.1375" asserts="0" description="help for Search-Directory">
            <results>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'Cache'" executed="True" result="Success" success="True" time="0.0482" asserts="0" description="help for Search-Directory.- Help for parameter 'Cache'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'Cache'.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'Cache'.has the correct [mandatory] value" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'Cache'.has the correct parameter type" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'Credential'" executed="True" result="Success" success="True" time="0.0678" asserts="0" description="help for Search-Directory.- Help for parameter 'Credential'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'Credential'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'Credential'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'Credential'.has the correct parameter type" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0886" asserts="0" description="help for Search-Directory.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'DebugOutputStream'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'DirectoryPath'" executed="True" result="Success" success="True" time="0.1154" asserts="0" description="help for Search-Directory.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'DirectoryPath'.has a description" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'Filter'" executed="True" result="Success" success="True" time="0.1412" asserts="0" description="help for Search-Directory.- Help for parameter 'Filter'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'Filter'.has a description" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'Filter'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'Filter'.has the correct parameter type" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'PageSize'" executed="True" result="Success" success="True" time="0.1634" asserts="0" description="help for Search-Directory.- Help for parameter 'PageSize'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'PageSize'.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'PageSize'.has the correct [mandatory] value" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'PageSize'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.2033" asserts="0" description="help for Search-Directory.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'ProgressAction'.has a description" time="0.0121" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'PropertiesToLoad'" executed="True" result="Success" success="True" time="0.2242" asserts="0" description="help for Search-Directory.- Help for parameter 'PropertiesToLoad'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'PropertiesToLoad'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'PropertiesToLoad'.has the correct [mandatory] value" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'PropertiesToLoad'.has the correct parameter type" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'SearchScope'" executed="True" result="Success" success="True" time="0.246" asserts="0" description="help for Search-Directory.- Help for parameter 'SearchScope'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'SearchScope'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'SearchScope'.has the correct [mandatory] value" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'SearchScope'.has the correct parameter type" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.2704" asserts="0" description="help for Search-Directory.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'ThisFqdn'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'ThisHostName'" executed="True" result="Success" success="True" time="0.2882" asserts="0" description="help for Search-Directory.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'ThisHostName'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Search-Directory.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.3143" asserts="0" description="help for Search-Directory.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Search-Directory.- Help for parameter 'WhoAmI'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Search-Directory.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Search-Directory.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Search-Directory.is not auto-generated" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Search-Directory.has a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Search-Directory.has example code" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Search-Directory.has example help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Manifest.tests.ps1" executed="True" result="Ignored" success="True" time="0.221" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest 'Adsi.psd1'" executed="True" result="Success" success="True" time="0.06" asserts="0" description="module manifest 'Adsi.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest 'Adsi.psd1'.- Validation" executed="True" result="Success" success="True" time="0.051" asserts="0" description="module manifest 'Adsi.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest 'Adsi.psd1'.- Validation.is a valid manifest" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid name in the manifest" name="module manifest 'Adsi.psd1'.- Validation.has a valid name in the manifest" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid root module" name="module manifest 'Adsi.psd1'.- Validation.has a valid root module" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid version" name="module manifest 'Adsi.psd1'.- Validation.has a valid version" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid description" name="module manifest 'Adsi.psd1'.- Validation.has a valid description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid author" name="module manifest 'Adsi.psd1'.- Validation.has a valid author" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid guid" name="module manifest 'Adsi.psd1'.- Validation.has a valid guid" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid copyright" name="module manifest 'Adsi.psd1'.- Validation.has a valid copyright" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.0846" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Ignored" success="True" time="0.0181" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0.0079" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0.004" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Metadata.tests.ps1" executed="True" result="Success" success="True" time="0.3065" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Success" success="True" time="0.0294" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.191" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'Adsi'" executed="True" result="Success" success="True" time="0.1253" asserts="0" description="PowerShell files in module 'Adsi'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'Adsi'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.1192" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\dist\4.0.464\Adsi\Adsi.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'Adsi'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\dist\4.0.464\Adsi\Adsi.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\dist\4.0.464\Adsi\Adsi.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'Adsi'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\dist\4.0.464\Adsi\Adsi.psm1' can be tokenized by the PowerShell parser without any errors" time="0.1101" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'Adsi'" executed="True" result="Success" success="True" time="0.1455" asserts="0" description="module 'Adsi'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'Adsi'.can be imported without any errors" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'Adsi'.can be imported without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\dist\4.0.464\Adsi\Adsi.psm1&quot;)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Project.tests.ps1" executed="True" result="Success" success="True" time="0.1696" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\Adsi\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>